{"version":3,"sources":["components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","todoId","filterStatus","filterTitle","selectUser","userId","setState","props","onSelectUser","setFilter","event","target","value","onInputHandler","filterByStatus","todo","completed","filterByTitle","title","toLowerCase","includes","todos","this","filteredTodos","filter","className","onChange","map","key","id","classnames","type","checked","readOnly","onClick","React","Component","request","url","fetch","then","response","ok","Error","status","statusText","json","data","getUser","CurrentUser","user","loadData","a","prevProps","onClearUser","name","email","phone","App","selectedUserId","handleSelectUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4ef729e4.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nexport class TodoList extends React.Component {\n  state = {\n    todoId: 0,\n    filterStatus: 'all',\n    filterTitle: '',\n  };\n\n  selectUser = (todoId, userId) => {\n    this.setState({ todoId });\n    this.props.onSelectUser(userId);\n  }\n\n  setFilter = (event) => {\n    this.setState({ filterStatus: event.target.value });\n  }\n\n  onInputHandler = (event) => {\n    this.setState({ filterTitle: event.target.value });\n  }\n\n  filterByStatus = (todo) => {\n    const { filterStatus } = this.state;\n\n    switch (filterStatus) {\n      case 'completed': return todo.completed;\n      case 'active': return !todo.completed;\n      default: return true;\n    }\n  }\n\n  filterByTitle = (todo) => {\n    const { filterTitle } = this.state;\n\n    if (todo.title === null) {\n      return;\n    }\n\n    // eslint-disable-next-line consistent-return\n    return todo.title.toLowerCase().includes(filterTitle.toLowerCase());\n  }\n\n  render() {\n    const { todos } = this.props;\n    const { todoId } = this.state;\n\n    const filteredTodos = todos\n      .filter(this.filterByStatus)\n      .filter(this.filterByTitle);\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <form>\n            <label className=\"TodoList__label\">\n              Todo filter:\n              <input\n                onChange={this.onInputHandler}\n                className=\"TodoList__filter\"\n              />\n            </label>\n\n            <label className=\"TodoList__label\">\n              Filter by status:\n              <select\n                className=\"TodoList__select\"\n                onChange={event => this.setFilter(event)}\n              >\n                <option value=\"all\">Show all</option>\n                <option value=\"active\">Show active</option>\n                <option value=\"completed\">Show completed</option>\n              </select>\n            </label>\n          </form>\n          <ul className=\"TodoList__list\">\n\n            {filteredTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={classnames('TodoList__item', {\n                  'TodoList__item--checked': todo.completed,\n                  'TodoList__item--unchecked': !todo.completed,\n                })}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={todo.completed}\n                    readOnly\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  onClick={() => this.selectUser(todo.id, todo.userId)}\n                  className={classnames('TodoList__user-button', 'button', {\n                    'TodoList__user-button--selected': todo.id === todoId,\n                  })}\n                  type=\"button\"\n                >\n                  {`User #${todo.userId}`}\n                </button>\n              </li>\n            ))}\n\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  onSelectUser: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","const API_URL = 'https://mate-api.herokuapp.com';\n\nfunction request(url) {\n  return fetch(`${API_URL}${url}`)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} --- ${response.statusText}`);\n      }\n\n      return response.json();\n    })\n    .then(json => json.data);\n}\n\nexport function getTodos() {\n  return request('/todos');\n}\n\nexport function getUsers() {\n  return request('/users');\n}\n\nexport function getUser(id) {\n  return request(`/users/${id}`);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../../api/api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  };\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadData();\n    }\n  }\n\n  loadData = async() => {\n    const user = await getUser(this.props.userId);\n\n    this.setState({ user });\n  };\n\n  render() {\n    const { user } = this.state;\n    const { onClearUser } = this.props;\n\n    return (\n      <>\n        {user && (\n          <div className=\"CurrentUser\">\n            <h2 className=\"CurrentUser__title\">\n              <span>\n                {`Selected user: ${user.id}`}\n              </span>\n            </h2>\n\n            <h3 className=\"CurrentUser__name\">{user.name}</h3>\n            <p className=\"CurrentUser__email\">{user.email}</p>\n            <p className=\"CurrentUser__phone\">{user.phone}</p>\n\n            <button\n              type=\"button\"\n              className=\"button CurrentUser__clear\"\n              onClick={onClearUser}\n            >\n              Clear\n            </button>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  onClearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n\n    this.setState({ todos });\n  }\n\n  handleSelectUser = (id) => {\n    this.setState({ selectedUserId: id });\n  };\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            onSelectUser={this.handleSelectUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                onClearUser={() => this.handleSelectUser(0)}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}